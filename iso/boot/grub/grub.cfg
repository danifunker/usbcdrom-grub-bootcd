# GRUB2 Boot Configuration for USBHLPCD - Maximum Compatibility
# Optimized for IDE-connected drives in BIOS systems

# These initial settings are critical for boot stability
# Set failsafe prefix and root in case search fails
set prefix=($root)/boot/grub
export prefix

# Basic configuration
set timeout=10
set default=0

# Add some visual styling
set menu_color_normal=white/black
set menu_color_highlight=black/light-gray

# Limit disk scan to prevent "disk not found" errors
set bios_boot=1

# Preload core modules with error suppression
insmod all_video || true
insmod ata || true
insmod biosdisk || true
insmod pata || true
insmod part_msdos || true
insmod fat || true
insmod iso9660 || true
insmod normal || true
insmod search || true
insmod ls || true
insmod linux || true
insmod linux16 || true
insmod chain || true
insmod boot || true
insmod configfile || true
insmod echo || true
insmod sleep || true

# USB support modules
insmod usb || true
insmod uhci || true
insmod ohci || true
insmod ehci || true
insmod usbms || true

# Now that all modules are loaded, try to find our device by filesystem label
search --no-floppy --label USBHLPCD --set=found_root

# Apply the search results if found
if [ -n "$found_root" ]; then
  set root=$found_root
  set prefix=($found_root)/boot/grub
  export root
  export prefix
fi

# Force normal module to load the menu
normal

# If we get here, normal failed - try to load the menu directly
if [ -f ${prefix}/grub.cfg ]; then
  configfile ${prefix}/grub.cfg
fi

# Diagnostic menu entry to help troubleshoot
menuentry "List Devices and Files" {
  echo "Available devices:"
  ls
  echo "Files in root:"
  ls /
  echo "Boot directory:"
  ls /boot
  echo "GRUB directory:"
  ls /boot/grub
  echo "Prefix: ${prefix}"
  echo "Root: ${root}"
  echo "IDE info:"
  ls (hd0) || echo "No IDE drive found at hd0"
  ls (hd1) || echo "No IDE drive found at hd1"
  echo "USB info:"
  ls (usb) || echo "No USB device found"
  ls (usb0) || echo "No USB device found at usb0"
  echo "ATA device scan:"
  ls (ata0) || echo "No device at ata0"
  ls (ata1) || echo "No device at ata1"
  ls (ata2) || echo "No device at ata2"
  echo "CD device scan:"
  ls (cd) || echo "No generic CD device found"
  ls (cd0) || echo "No device at cd0"
  ls (cd1) || echo "No device at cd1"
  echo "Press ESC to return to menu"
  sleep 30
}

menuentry "Boot USB CD-ROM" {
  # Make sure memdisk is loaded correctly first
  if [ -f /boot/memdisk ]; then
    echo "Loading memdisk from ISO..."
    linux16 /boot/memdisk iso raw
    if [ -d (usb0) ]; then
      echo "Found USB device at usb0"
      initrd16 (usb0)
    else
      echo "USB device not found at usb0, trying usb"
      initrd16 (usb)
    fi
  else
    echo "Error: memdisk not found!"
    sleep 5
  fi
}

menuentry "Boot from Windows 98 Floppy Image with USB CDROM Support" {
  if [ -f /boot/memdisk ]; then
    if [ -f /images/w98_boot.img ]; then
      echo "Loading Windows 98 boot image..."
      linux16 /boot/memdisk
      initrd16 /images/w98_boot.img
    else
      echo "Error: w98_boot.img not found!"
      sleep 5
    fi
  else
    echo "Error: memdisk not found!"
    sleep 5
  fi
}

menuentry "Boot MSDOS 6.22 Basic Floppy Image (no setup.bat)" {
  if [ -f /boot/memdisk ]; then
    if [ -f /images/msdos622-with-usbcdrom.img ]; then
      echo "Loading MS-DOS 6.22 image..."
      linux16 /boot/memdisk
      initrd16 /images/msdos622-with-usbcdrom.img
    else
      echo "Error: msdos622-with-usbcdrom.img not found!"
      sleep 5
    fi
  else
    echo "Error: memdisk not found!"
    sleep 5
  fi
}

# Add a fallback option for IDE primary drive
menuentry "Boot from first IDE hard disk" {
  echo "Attempting to boot from first hard disk..."
  insmod chain || true
  insmod part_msdos || true
  chainloader (hd0)+1
}

